d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3<-merge(d1,d2)
#print(nrow(d3))
str(d3)
setwd("E:/Documentos/Universidad/2017-2/analisisvisualizacion/final by Castilla and Velasco")
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3<-merge(d1,d2)
#print(nrow(d3))
str(d3)
install.packages('ggplot2')
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3<-merge(d1,d2)
#print(nrow(d3))
ggplot(d3, aes(x=sex, y=g1)) +
geom_point(shape=1)      # Use hollow circles
str(d3)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3<-merge(d1,d2)
ggplot(d3, aes(x=sex, y=g1))
geom_point(shape=1)      # Use hollow circles
ggplot(d3, aes(x=sex, y=g1))+geom_point(shape=1)      # Use hollow circles
ggplot(d3, aes(x=sex, y=freetime))+geom_point(shape=1)      # Use hollow circles
ggplot(d3, aes(x=school, y=address))+geom_point(shape=1)      # Use hollow circles
ggplot(d3, aes(x=school, y=address)) +
geom_density()
ggplot(d3, aes(x=health, y=freetime)) +
geom_density()
ggplot(d3, aes(x=health, y=freetime)) +
geom_point(shape=1)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3<-merge(d1,d2)
#print(nrow(d3))
ggplot(d3, aes(x=health, y=freetime)) +
geom_point(shape=1)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
d3 <- rbind(d1, d2)
edit(d3)
ggplot(d3, aes(x=health, y=freetime)) +
geom_point(shape=1)
str(d3)
ggplot(d3, aes(x=absences, y=sex)) +
geom_point(shape=1)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#Mezclo los dos datasets
d3 <- rbind(d1, d2)
ggplot(d3, aes(x=absences, y=sex)) +
geom_point(shape=1)
str(d3)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#Mezclo los dos datasets
d3 <- rbind(d1, d2)
ggplot(d3, aes(x=age, y=Medu)) +
geom_point(shape=1)
str(d3)
ggplot(d3, aes(x=age, y=freetime)) +
geom_point(shape=1)
ggplot(d3, aes(x=age, y=freetime)) +
geom_point(shape=1) +
geom_smooth(method=lm)
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=50) +
geom_smooth(method=lm)
#Relaciono la edad y el tiempo libre discriminando por sexo
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=100) +
geom_smooth(method=lm)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#Mezclo los dos datasets
d3 <- rbind(d1, d2)
#Relaciono la edad y el tiempo libre discriminando por sexo
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=90) +
geom_smooth(method=lm)
str(d3)
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#Mezclo los dos datasets
d3 <- rbind(d1, d2)
#Relaciono la edad y el tiempo libre discriminando por sexo
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=70) +
geom_smooth(method=lm)
str(d3)
# Histogram overlaid with kernel density curve
ggplot(d3, aes(x=freetime)) +
geom_histogram(aes(y=age),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(dat, aes(x=age)) + geom_density()
ggplot(d3, aes(x=age)) + geom_density()
ggplot(d3, aes(x=age))
ggplot(d3, aes(x=age)) + geom_density()
ggplot(dat, aes(x=rating)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(d3, aes(x=age)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(d3, aes(x=age)) +
geom_histogram(binwidth=.5, color=sex, colour="black", fill="white")
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(dat, aes(x=freetime) + geom_density())
ggplot(d3, aes(x=freetime) + geom_density())
str(d3)
ggplot(d3, aes(x=schoolsup) + geom_density())
ggplot(d3, aes(x=famrel) + geom_density())
#histograma para edades
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(d3, aes(x=famrel)) + geom_density()
#histogram with family relations on x axis
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(rating, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
#histogram with family relations on x axis
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(famrel, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
#age vs freetime colored by sex
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=70) +
geom_smooth(method=lm)
#histogram with family relations on x axis with MEAN
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(famrel, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
install.packages("rmarkdown")
---
title: "Viridis Demo"
output: html_document
---
```{r include = FALSE}
library(viridis)
```
The code below demonstrates two color palettes in the [viridis](https://github.com/sjmgarnier/viridis) package. Each plot displays a contour map of the Maunga Whau volcano in Auckland, New Zealand.
## Viridis colors
```{r}
image(volcano, col = viridis(200))
```
## Magma colors
```{r}
image(volcano, col = viridis(200, option = "A"))
```
#histogram with family relations on x axis with MEAN
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(famrel, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
#age vs freetime colored by sex
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=70) +
geom_smooth(method=lm)
install.packages("rmarkdown")
library('ggplot2')
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#bind the two datasets into one
d3 <- rbind(d1, d2)
#age vs freetime colored by sex
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=70) +
geom_smooth(method=lm)
#histogram with family relations on x axis with MEAN
ggplot(d3, aes(x=famrel)) +
geom_histogram(binwidth=.5, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(famrel, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
str(d3)
install.packages("rmarkdown")
d1<-read.table("student-mat.csv",sep=",",header=TRUE)
d2<-read.table("student-por.csv",sep=",",header=TRUE)
#bind the two datasets into one
d3 <- rbind(d1, d2)
#age vs freetime colored by sex
ggplot(d3, aes(x=age, y=freetime, color=sex)) +
geom_point(shape=1) +
scale_colour_hue(l=70) +
geom_smooth(method=lm)
library('ggplot2')
